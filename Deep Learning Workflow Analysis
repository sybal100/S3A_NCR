import math
import os
from distutils.command.install_egg_info import to_filename
from encodings.utf_8 import encode
from tkinter.filedialog import SaveAs

import numpy as np
import openpyxl
import pandas as pd
import seaborn as sns

plugin_dir = "/Users/filepath"

# define output folder
res_dir = f'/Users/filepath'

# create dir for output figures + data
os.makedirs(res_dir, exist_ok=True)

#if certain fenestrae are supposed to be removed, add the names of the label after drop (here 2 and 688)
samplePath = f'{plugin_dir}/{"sample name"}'
sampl_name = os.path.basename(samplePath)
sample_name = sampl_name.replace('.csv', '')
data = pd.read_csv(samplePath)
data.drop([2,688])
data.to_csv(f'{plugin_dir}/{sample_name}_clean.csv')

def JulichAnalysis(sample):
    print(sample)
    os.listdir(plugin_dir) == sample
    # read the list
    samplePath = f'{plugin_dir}/{sample}'
    data = pd.read_csv(samplePath)

    # fenestrae number
    fen_num = len(data.index)

    # average fenestrae diameter in nm
    ffen_dia = data.iloc[0:,2].astype(float)
    fen_dia = ffen_dia.mean()/81.125*1000

    #enter here the conversion used for the pictures: here 81.125 pixel are 1 µm
    data.iloc[0:,2] = data.iloc[0:,2].astype(float)/81.125*1000

    # total fenestrae area in µm^2
    data.insert(3, "Fen_Area", True)
    data['Fen_Area'] = (data.iloc[0:,2]/2)*(data.iloc[0:,2]/2)*math.pi
    fen_area = sum(data.iloc[0:,3])/1000000

    # define file name
    fil_name = os.path.basename(samplePath)
    file_name = fil_name.replace('.csv', '')

    # merge
    analysis_list = pd.DataFrame([file_name,fen_area, fen_num, fen_dia])
    fin_list = analysis_list.transpose()
    print(fin_list)

    #save to folder 
    fin_list.to_excel(f'{res_dir}/{file_name}_counts.xlsx')
    return fin_list

JulichAnalysis("sample name")

#make list with all the results 
SampleList = os.listdir(plugin_dir)

res_list = [JulichAnalysis(file) for file in SampleList if file.endswith("csv")]
resDf = pd.concat(res_list)
resDf.columns = ['ID', 'total fenestrae area [µm]', 'fenestrae number', 'fenestrae diameter [nm]']
resDf.to_excel(res_dir+"Total_Results.xlsx")
    
